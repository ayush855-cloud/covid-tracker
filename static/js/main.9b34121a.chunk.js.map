{"version":3,"sources":["InfoBox.js","LineGraph.js","Table.js","util.js","Map.js","App.js","index.js"],"names":["InfoBox","title","cases","total","active","isRed","props","Card","onClick","className","CardContent","Typography","color","gutterBottom","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","sortedData","sort","b","prettyPrintStat","stat","showDataOnMap","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","Map","zoom","TileLayer","url","attribution","App","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","getCountriesData","onCountryChange","e","countryCode","target","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b34121a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\r\n//   console.log(title, active);\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      }`}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          {cases}\r\n        </h2>\r\n\r\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n          {total} Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    // console.log(data.cases);\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      // console.log(date);\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          // console.log(data)\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n      {countries.map((country) => (\r\n        <tr>\r\n          <td>{country.country}</td>\r\n          <td>\r\n            <strong>{numeral(country.cases).format(\"0,0\")}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      rgb: \"rgb(204, 16, 52)\",\r\n      half_op: \"rgba(204, 16, 52, 0.5)\",\r\n      multiplier: 800,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      rgb: \"rgb(125, 215, 29)\",\r\n      half_op: \"rgba(125, 215, 29, 0.5)\",\r\n      multiplier: 1200,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      rgb: \"rgb(251, 68, 67)\",\r\n      half_op: \"rgba(251, 68, 67, 0.5)\",\r\n      multiplier: 2000,\r\n    },\r\n  };\r\n\r\nexport const sortData = (data) => {\r\n    let sortedData = [...data];\r\n    sortedData.sort((a, b) => {\r\n      if (a.cases > b.cases) {\r\n        return -1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    });\r\n    return sortedData;\r\n  };\r\n\r\n  export const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));","\r\nimport React from \"react\";\r\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}